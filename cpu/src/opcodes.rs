use lazy_static::lazy_static;
use std::collections::HashMap;

#[derive(Debug, Clone, Copy)]
pub struct OpCode {
    pub value: u8,
    pub name: &'static str,
    pub tcycles: (u8, u8), //without, with branching
    pub length: u8,
}

impl OpCode {
    pub fn new(value: u8, name: &'static str, tcycles: (u8, u8), length: u8) -> Self {
        OpCode {
            value,
            name,
            tcycles,
            length,
        }
    }
}

lazy_static! {
    pub static ref UNPREFIXED_OPCODES: Vec<OpCode> = vec![
        OpCode::new(0x00, "NOP", (4, 4), 1),
        OpCode::new(0x01, "LD BC,u16", (12, 12), 3),
        OpCode::new(0x02, "LD (BC),A", (8, 8), 1),
        OpCode::new(0x03, "INC BC", (8, 8), 1),
        OpCode::new(0x04, "INC B", (4, 4), 1),
        OpCode::new(0x05, "DEC B", (4, 4), 1),
        OpCode::new(0x06, "LD B,u8", (8, 8), 2),
        OpCode::new(0x07, "RLCA", (4, 4), 1),
        OpCode::new(0x08, "LD (u16),SP", (20, 20), 3),
        OpCode::new(0x09, "ADD HL,BC", (8, 8), 1),
        OpCode::new(0x0A, "LD A,(BC)", (8, 8), 1),
        OpCode::new(0x0B, "DEC BC", (8, 8), 1),
        OpCode::new(0x0C, "INC C", (4, 4), 1),
        OpCode::new(0x0D, "DEC C", (4, 4), 1),
        OpCode::new(0x0E, "LD C,u8", (8, 8), 2),
        OpCode::new(0x0F, "RRCA", (4, 4), 1),
        OpCode::new(0x10, "STOP", (4, 4), 1),
        OpCode::new(0x11, "LD DE,u16", (12, 12), 3),
        OpCode::new(0x12, "LD (DE),A", (8, 8), 1),
        OpCode::new(0x13, "INC DE", (8, 8), 1),
        OpCode::new(0x14, "INC D", (4, 4), 1),
        OpCode::new(0x15, "DEC D", (4, 4), 1),
        OpCode::new(0x16, "LD D,u8", (8, 8), 2),
        OpCode::new(0x17, "RLA", (4, 4), 1),
        OpCode::new(0x18, "JR i8", (12, 12), 2),
        OpCode::new(0x19, "ADD HL,DE", (8, 8), 1),
        OpCode::new(0x1A, "LD A,(DE)", (8, 8), 1),
        OpCode::new(0x1B, "DEC DE", (8, 8), 1),
        OpCode::new(0x1C, "INC E", (4, 4), 1),
        OpCode::new(0x1D, "DEC E", (4, 4), 1),
        OpCode::new(0x1E, "LD E,u8", (8, 8), 2),
        OpCode::new(0x1F, "RRA", (4, 4), 1),
        OpCode::new(0x20, "JR NZ,i8", (8, 12), 2),
        OpCode::new(0x21, "LD HL,u16", (12, 12), 3),
        OpCode::new(0x22, "LD (HL+),A", (8, 8), 1),
        OpCode::new(0x23, "INC HL", (8, 8), 1),
        OpCode::new(0x24, "INC H", (4, 4), 1),
        OpCode::new(0x25, "DEC H", (4, 4), 1),
        OpCode::new(0x26, "LD H,u8", (8, 8), 2),
        OpCode::new(0x27, "DAA", (4, 4), 1),
        OpCode::new(0x28, "JR Z,i8", (8, 12), 2),
        OpCode::new(0x29, "ADD HL,HL", (8, 8), 1),
        OpCode::new(0x2A, "LD A,(HL+)", (8, 8), 1),
        OpCode::new(0x2B, "DEC HL", (8, 8), 1),
        OpCode::new(0x2C, "INC L", (4, 4), 1),
        OpCode::new(0x2D, "DEC L", (4, 4), 1),
        OpCode::new(0x2E, "LD L,u8", (8, 8), 2),
        OpCode::new(0x2F, "CPL", (4, 4), 1),
        OpCode::new(0x30, "JR NC,i8", (8, 12), 2),
        OpCode::new(0x31, "LD SP,u16", (12, 12), 3),
        OpCode::new(0x32, "LD (HL-),A", (8, 8), 1),
        OpCode::new(0x33, "INC SP", (8, 8), 1),
        OpCode::new(0x34, "INC (HL)", (12, 12), 1),
        OpCode::new(0x35, "DEC (HL)", (12, 12), 1),
        OpCode::new(0x36, "LD (HL),u8", (12, 12), 2),
        OpCode::new(0x37, "SCF", (4, 4), 1),
        OpCode::new(0x38, "JR C,i8", (8, 12), 2),
        OpCode::new(0x39, "ADD HL,SP", (8, 8), 1),
        OpCode::new(0x3A, "LD A,(HL-)", (8, 8), 1),
        OpCode::new(0x3B, "DEC SP", (8, 8), 1),
        OpCode::new(0x3C, "INC A", (4, 4), 1),
        OpCode::new(0x3D, "DEC A", (4, 4), 1),
        OpCode::new(0x3E, "LD A,u8", (8, 8), 2),
        OpCode::new(0x3F, "CCF", (4, 4), 1),
        OpCode::new(0x40, "LD B,B", (4, 4), 1),
        OpCode::new(0x41, "LD B,C", (4, 4), 1),
        OpCode::new(0x42, "LD B,D", (4, 4), 1),
        OpCode::new(0x43, "LD B,E", (4, 4), 1),
        OpCode::new(0x44, "LD B,H", (4, 4), 1),
        OpCode::new(0x45, "LD B,L", (4, 4), 1),
        OpCode::new(0x46, "LD B,(HL)", (8, 8), 1),
        OpCode::new(0x47, "LD B,A", (4, 4), 1),
        OpCode::new(0x48, "LD C,B", (4, 4), 1),
        OpCode::new(0x49, "LD C,C", (4, 4), 1),
        OpCode::new(0x4A, "LD C,D", (4, 4), 1),
        OpCode::new(0x4B, "LD C,E", (4, 4), 1),
        OpCode::new(0x4C, "LD C,H", (4, 4), 1),
        OpCode::new(0x4D, "LD C,L", (4, 4), 1),
        OpCode::new(0x4E, "LD C,(HL)", (8, 8), 1),
        OpCode::new(0x4F, "LD C,A", (4, 4), 1),
        OpCode::new(0x50, "LD D,B", (4, 4), 1),
        OpCode::new(0x51, "LD D,C", (4, 4), 1),
        OpCode::new(0x52, "LD D,D", (4, 4), 1),
        OpCode::new(0x53, "LD D,E", (4, 4), 1),
        OpCode::new(0x54, "LD D,H", (4, 4), 1),
        OpCode::new(0x55, "LD D,L", (4, 4), 1),
        OpCode::new(0x56, "LD D,(HL)", (8, 8), 1),
        OpCode::new(0x57, "LD D,A", (4, 4), 1),
        OpCode::new(0x58, "LD E,B", (4, 4), 1),
        OpCode::new(0x59, "LD E,C", (4, 4), 1),
        OpCode::new(0x5A, "LD E,D", (4, 4), 1),
        OpCode::new(0x5B, "LD E,E", (4, 4), 1),
        OpCode::new(0x5C, "LD E,H", (4, 4), 1),
        OpCode::new(0x5D, "LD E,L", (4, 4), 1),
        OpCode::new(0x5E, "LD E,(HL)", (8, 8), 1),
        OpCode::new(0x5F, "LD E,A", (4, 4), 1),
        OpCode::new(0x60, "LD H,B", (4, 4), 1),
        OpCode::new(0x61, "LD H,C", (4, 4), 1),
        OpCode::new(0x62, "LD H,D", (4, 4), 1),
        OpCode::new(0x63, "LD H,E", (4, 4), 1),
        OpCode::new(0x64, "LD H,H", (4, 4), 1),
        OpCode::new(0x65, "LD H,L", (4, 4), 1),
        OpCode::new(0x66, "LD H,(HL)", (8, 8), 1),
        OpCode::new(0x67, "LD H,A", (4, 4), 1),
        OpCode::new(0x68, "LD L,B", (4, 4), 1),
        OpCode::new(0x69, "LD L,C", (4, 4), 1),
        OpCode::new(0x6A, "LD L,D", (4, 4), 1),
        OpCode::new(0x6B, "LD L,E", (4, 4), 1),
        OpCode::new(0x6C, "LD L,H", (4, 4), 1),
        OpCode::new(0x6D, "LD L,L", (4, 4), 1),
        OpCode::new(0x6E, "LD L,(HL)", (8, 8), 1),
        OpCode::new(0x6F, "LD L,A", (4, 4), 1),
        OpCode::new(0x70, "LD (HL),B", (8, 8), 1),
        OpCode::new(0x71, "LD (HL),C", (8, 8), 1),
        OpCode::new(0x72, "LD (HL),D", (8, 8), 1),
        OpCode::new(0x73, "LD (HL),E", (8, 8), 1),
        OpCode::new(0x74, "LD (HL),H", (8, 8), 1),
        OpCode::new(0x75, "LD (HL),L", (8, 8), 1),
        OpCode::new(0x76, "HALT", (4, 4), 1),
        OpCode::new(0x77, "LD (HL),A", (8, 8), 1),
        OpCode::new(0x78, "LD A,B", (4, 4), 1),
        OpCode::new(0x79, "LD A,C", (4, 4), 1),
        OpCode::new(0x7A, "LD A,D", (4, 4), 1),
        OpCode::new(0x7B, "LD A,E", (4, 4), 1),
        OpCode::new(0x7C, "LD A,H", (4, 4), 1),
        OpCode::new(0x7D, "LD A,L", (4, 4), 1),
        OpCode::new(0x7E, "LD A,(HL)", (8, 8), 1),
        OpCode::new(0x7F, "LD A,A", (4, 4), 1),
        OpCode::new(0x80, "ADD A,B", (4, 4), 1),
        OpCode::new(0x81, "ADD A,C", (4, 4), 1),
        OpCode::new(0x82, "ADD A,D", (4, 4), 1),
        OpCode::new(0x83, "ADD A,E", (4, 4), 1),
        OpCode::new(0x84, "ADD A,H", (4, 4), 1),
        OpCode::new(0x85, "ADD A,L", (4, 4), 1),
        OpCode::new(0x86, "ADD A,(HL)", (8, 8), 1),
        OpCode::new(0x87, "ADD A,A", (4, 4), 1),
        OpCode::new(0x88, "ADC A,B", (4, 4), 1),
        OpCode::new(0x89, "ADC A,C", (4, 4), 1),
        OpCode::new(0x8A, "ADC A,D", (4, 4), 1),
        OpCode::new(0x8B, "ADC A,E", (4, 4), 1),
        OpCode::new(0x8C, "ADC A,H", (4, 4), 1),
        OpCode::new(0x8D, "ADC A,L", (4, 4), 1),
        OpCode::new(0x8E, "ADC A,(HL)", (8, 8), 1),
        OpCode::new(0x8F, "ADC A,A", (4, 4), 1),
        OpCode::new(0x90, "SUB A,B", (4, 4), 1),
        OpCode::new(0x91, "SUB A,C", (4, 4), 1),
        OpCode::new(0x92, "SUB A,D", (4, 4), 1),
        OpCode::new(0x93, "SUB A,E", (4, 4), 1),
        OpCode::new(0x94, "SUB A,H", (4, 4), 1),
        OpCode::new(0x95, "SUB A,L", (4, 4), 1),
        OpCode::new(0x96, "SUB A,(HL)", (8, 8), 1),
        OpCode::new(0x97, "SUB A,A", (4, 4), 1),
        OpCode::new(0x98, "SBC A,B", (4, 4), 1),
        OpCode::new(0x99, "SBC A,C", (4, 4), 1),
        OpCode::new(0x9A, "SBC A,D", (4, 4), 1),
        OpCode::new(0x9B, "SBC A,E", (4, 4), 1),
        OpCode::new(0x9C, "SBC A,H", (4, 4), 1),
        OpCode::new(0x9D, "SBC A,L", (4, 4), 1),
        OpCode::new(0x9E, "SBC A,(HL)", (8, 8), 1),
        OpCode::new(0x9F, "SBC A,A", (4, 4), 1),
        OpCode::new(0xA0, "AND A,B", (4, 4), 1),
        OpCode::new(0xA1, "AND A,C", (4, 4), 1),
        OpCode::new(0xA2, "AND A,D", (4, 4), 1),
        OpCode::new(0xA3, "AND A,E", (4, 4), 1),
        OpCode::new(0xA4, "AND A,H", (4, 4), 1),
        OpCode::new(0xA5, "AND A,L", (4, 4), 1),
        OpCode::new(0xA6, "AND A,(HL)", (8, 8), 1),
        OpCode::new(0xA7, "AND A,A", (4, 4), 1),
        OpCode::new(0xA8, "XOR A,B", (4, 4), 1),
        OpCode::new(0xA9, "XOR A,C", (4, 4), 1),
        OpCode::new(0xAA, "XOR A,D", (4, 4), 1),
        OpCode::new(0xAB, "XOR A,E", (4, 4), 1),
        OpCode::new(0xAC, "XOR A,H", (4, 4), 1),
        OpCode::new(0xAD, "XOR A,L", (4, 4), 1),
        OpCode::new(0xAE, "XOR A,(HL)", (8, 8), 1),
        OpCode::new(0xAF, "XOR A,A", (4, 4), 1),
        OpCode::new(0xB0, "OR A,B", (4, 4), 1),
        OpCode::new(0xB1, "OR A,C", (4, 4), 1),
        OpCode::new(0xB2, "OR A,D", (4, 4), 1),
        OpCode::new(0xB3, "OR A,E", (4, 4), 1),
        OpCode::new(0xB4, "OR A,H", (4, 4), 1),
        OpCode::new(0xB5, "OR A,L", (4, 4), 1),
        OpCode::new(0xB6, "OR A,(HL)", (8, 8), 1),
        OpCode::new(0xB7, "OR A,A", (4, 4), 1),
        OpCode::new(0xB8, "CP A,B", (4, 4), 1),
        OpCode::new(0xB9, "CP A,C", (4, 4), 1),
        OpCode::new(0xBA, "CP A,D", (4, 4), 1),
        OpCode::new(0xBB, "CP A,E", (4, 4), 1),
        OpCode::new(0xBC, "CP A,H", (4, 4), 1),
        OpCode::new(0xBD, "CP A,L", (4, 4), 1),
        OpCode::new(0xBE, "CP A,(HL)", (8, 8), 1),
        OpCode::new(0xBF, "CP A,A", (4, 4), 1),
        OpCode::new(0xC0, "RET NZ", (8, 20), 1),
        OpCode::new(0xC1, "POP BC", (12, 12), 1),
        OpCode::new(0xC2, "JP NZ,u16", (12, 16), 3),
        OpCode::new(0xC3, "JP u16", (16, 16), 3),
        OpCode::new(0xC4, "CALL NZ,u16", (12, 24), 3),
        OpCode::new(0xC5, "PUSH BC", (16, 16), 1),
        OpCode::new(0xC6, "ADD A,u8", (8, 8), 2),
        OpCode::new(0xC7, "RST 00h", (16, 16), 1),
        OpCode::new(0xC8, "RET Z", (8, 20), 1),
        OpCode::new(0xC9, "RET", (16, 16), 1),
        OpCode::new(0xCA, "JP Z,u16", (12, 16), 3),
        OpCode::new(0xCB, "PREFIX CB", (4, 4), 1),
        OpCode::new(0xCC, "CALL Z,u16", (12, 24), 3),
        OpCode::new(0xCD, "CALL u16", (24, 24), 3),
        OpCode::new(0xCE, "ADC A,u8", (8, 8), 2),
        OpCode::new(0xCF, "RST 08h", (16, 16), 1),
        OpCode::new(0xD0, "RET NC", (8, 20), 1),
        OpCode::new(0xD1, "POP DE", (12, 12), 1),
        OpCode::new(0xD2, "JP NC,u16", (12, 16), 3),
        OpCode::new(0xD3, "UNUSED", (0, 0), 1),
        OpCode::new(0xD4, "CALL NC,u16", (12, 24), 3),
        OpCode::new(0xD5, "PUSH DE", (16, 16), 1),
        OpCode::new(0xD6, "SUB A,u8", (8, 8), 2),
        OpCode::new(0xD7, "RST 10h", (16, 16), 1),
        OpCode::new(0xD8, "RET C", (8, 20), 1),
        OpCode::new(0xD9, "RETI", (16, 16), 1),
        OpCode::new(0xDA, "JP C,u16", (12, 16), 3),
        OpCode::new(0xDB, "UNUSED", (0, 0), 1),
        OpCode::new(0xDC, "CALL C,u16", (12, 24), 3),
        OpCode::new(0xDD, "UNUSED", (0, 0), 1),
        OpCode::new(0xDE, "SBC A,u8", (8, 8), 2),
        OpCode::new(0xDF, "RST 18h", (16, 16), 1),
        OpCode::new(0xE0, "LD (FF00+u8),A", (12, 12), 2),
        OpCode::new(0xE1, "POP HL", (12, 12), 1),
        OpCode::new(0xE2, "LD (FF00+C),A", (8, 8), 1),
        OpCode::new(0xE3, "UNUSED", (0, 0), 1),
        OpCode::new(0xE4, "UNUSED", (0, 0), 1),
        OpCode::new(0xE5, "PUSH HL", (16, 16), 1),
        OpCode::new(0xE6, "AND A,u8", (8, 8), 2),
        OpCode::new(0xE7, "RST 20h", (16, 16), 1),
        OpCode::new(0xE8, "ADD SP,i8", (16, 16), 2),
        OpCode::new(0xE9, "JP HL", (4, 4), 1),
        OpCode::new(0xEA, "LD (u16),A", (16, 16), 3),
        OpCode::new(0xEB, "UNUSED", (0, 0), 1),
        OpCode::new(0xEC, "UNUSED", (0, 0), 1),
        OpCode::new(0xED, "UNUSED", (0, 0), 1),
        OpCode::new(0xEE, "XOR A,u8", (8, 8), 2),
        OpCode::new(0xEF, "RST 28h", (16, 16), 1),
        OpCode::new(0xF0, "LD A,(FF00+u8)", (12, 12), 2),
        OpCode::new(0xF1, "POP AF", (12, 12), 1),
        OpCode::new(0xF2, "LD A,(FF00+C)", (8, 8), 1),
        OpCode::new(0xF3, "DI", (4, 4), 1),
        OpCode::new(0xF4, "UNUSED", (0, 0), 1),
        OpCode::new(0xF5, "PUSH AF", (16, 16), 1),
        OpCode::new(0xF6, "OR A,u8", (8, 8), 2),
        OpCode::new(0xF7, "RST 30h", (16, 16), 1),
        OpCode::new(0xF8, "LD HL,SP+i8", (12, 12), 2),
        OpCode::new(0xF9, "LD SP,HL", (8, 8), 1),
        OpCode::new(0xFA, "LD A,(u16)", (16, 16), 3),
        OpCode::new(0xFB, "EI", (4, 4), 1),
        OpCode::new(0xFC, "UNUSED", (0, 0), 1),
        OpCode::new(0xFD, "UNUSED", (0, 0), 1),
        OpCode::new(0xFE, "CP A,u8", (8, 8), 2),
        OpCode::new(0xFF, "RST 38h", (16, 16), 1),
    ];
    pub static ref UNPREFIXED_OPCODES_MAP: HashMap<u8, &'static OpCode> = {
        let mut map = HashMap::new();
        for opcode in &*UNPREFIXED_OPCODES {
            map.insert(opcode.value, opcode);
        }
        map
    };
    pub static ref CB_PREFIXED_OPCODES: Vec<OpCode> = vec![
        OpCode::new(0x00, "RLC B", (8, 8), 2),
        OpCode::new(0x01, "RLC C", (8, 8), 2),
        OpCode::new(0x02, "RLC D", (8, 8), 2),
        OpCode::new(0x03, "RLC E", (8, 8), 2),
        OpCode::new(0x04, "RLC H", (8, 8), 2),
        OpCode::new(0x05, "RLC L", (8, 8), 2),
        OpCode::new(0x06, "RLC (HL)", (16, 16), 2),
        OpCode::new(0x07, "RLC A", (8, 8), 2),
        OpCode::new(0x08, "RRC B", (8, 8), 2),
        OpCode::new(0x09, "RRC C", (8, 8), 2),
        OpCode::new(0x0A, "RRC D", (8, 8), 2),
        OpCode::new(0x0B, "RRC E", (8, 8), 2),
        OpCode::new(0x0C, "RRC H", (8, 8), 2),
        OpCode::new(0x0D, "RRC L", (8, 8), 2),
        OpCode::new(0x0E, "RRC (HL)", (16, 16), 2),
        OpCode::new(0x0F, "RRC A", (8, 8), 2),
        OpCode::new(0x10, "RL B", (8, 8), 2),
        OpCode::new(0x11, "RL C", (8, 8), 2),
        OpCode::new(0x12, "RL D", (8, 8), 2),
        OpCode::new(0x13, "RL E", (8, 8), 2),
        OpCode::new(0x14, "RL H", (8, 8), 2),
        OpCode::new(0x15, "RL L", (8, 8), 2),
        OpCode::new(0x16, "RL (HL)", (16, 16), 2),
        OpCode::new(0x17, "RL A", (8, 8), 2),
        OpCode::new(0x18, "RR B", (8, 8), 2),
        OpCode::new(0x19, "RR C", (8, 8), 2),
        OpCode::new(0x1A, "RR D", (8, 8), 2),
        OpCode::new(0x1B, "RR E", (8, 8), 2),
        OpCode::new(0x1C, "RR H", (8, 8), 2),
        OpCode::new(0x1D, "RR L", (8, 8), 2),
        OpCode::new(0x1E, "RR (HL)", (16, 16), 2),
        OpCode::new(0x1F, "RR A", (8, 8), 2),
        OpCode::new(0x20, "SLA B", (8, 8), 2),
        OpCode::new(0x21, "SLA C", (8, 8), 2),
        OpCode::new(0x22, "SLA D", (8, 8), 2),
        OpCode::new(0x23, "SLA E", (8, 8), 2),
        OpCode::new(0x24, "SLA H", (8, 8), 2),
        OpCode::new(0x25, "SLA L", (8, 8), 2),
        OpCode::new(0x26, "SLA (HL)", (16, 16), 2),
        OpCode::new(0x27, "SLA A", (8, 8), 2),
        OpCode::new(0x28, "SRA B", (8, 8), 2),
        OpCode::new(0x29, "SRA C", (8, 8), 2),
        OpCode::new(0x2A, "SRA D", (8, 8), 2),
        OpCode::new(0x2B, "SRA E", (8, 8), 2),
        OpCode::new(0x2C, "SRA H", (8, 8), 2),
        OpCode::new(0x2D, "SRA L", (8, 8), 2),
        OpCode::new(0x2E, "SRA (HL)", (16, 16), 2),
        OpCode::new(0x2F, "SRA A", (8, 8), 2),
        OpCode::new(0x30, "SWAP B", (8, 8), 2),
        OpCode::new(0x31, "SWAP C", (8, 8), 2),
        OpCode::new(0x32, "SWAP D", (8, 8), 2),
        OpCode::new(0x33, "SWAP E", (8, 8), 2),
        OpCode::new(0x34, "SWAP H", (8, 8), 2),
        OpCode::new(0x35, "SWAP L", (8, 8), 2),
        OpCode::new(0x36, "SWAP (HL)", (16, 16), 2),
        OpCode::new(0x37, "SWAP A", (8, 8), 2),
        OpCode::new(0x38, "SRL B", (8, 8), 2),
        OpCode::new(0x39, "SRL C", (8, 8), 2),
        OpCode::new(0x3A, "SRL D", (8, 8), 2),
        OpCode::new(0x3B, "SRL E", (8, 8), 2),
        OpCode::new(0x3C, "SRL H", (8, 8), 2),
        OpCode::new(0x3D, "SRL L", (8, 8), 2),
        OpCode::new(0x3E, "SRL (HL)", (16, 16), 2),
        OpCode::new(0x3F, "SRL A", (8, 8), 2),
        OpCode::new(0x40, "BIT 0,B", (8, 8), 2),
        OpCode::new(0x41, "BIT 0,C", (8, 8), 2),
        OpCode::new(0x42, "BIT 0,D", (8, 8), 2),
        OpCode::new(0x43, "BIT 0,E", (8, 8), 2),
        OpCode::new(0x44, "BIT 0,H", (8, 8), 2),
        OpCode::new(0x45, "BIT 0,L", (8, 8), 2),
        OpCode::new(0x46, "BIT 0,(HL)", (12, 12), 2),
        OpCode::new(0x47, "BIT 0,A", (8, 8), 2),
        OpCode::new(0x48, "BIT 1,B", (8, 8), 2),
        OpCode::new(0x49, "BIT 1,C", (8, 8), 2),
        OpCode::new(0x4A, "BIT 1,D", (8, 8), 2),
        OpCode::new(0x4B, "BIT 1,E", (8, 8), 2),
        OpCode::new(0x4C, "BIT 1,H", (8, 8), 2),
        OpCode::new(0x4D, "BIT 1,L", (8, 8), 2),
        OpCode::new(0x4E, "BIT 1,(HL)", (12, 12), 2),
        OpCode::new(0x4F, "BIT 1,A", (8, 8), 2),
        OpCode::new(0x50, "BIT 2,B", (8, 8), 2),
        OpCode::new(0x51, "BIT 2,C", (8, 8), 2),
        OpCode::new(0x52, "BIT 2,D", (8, 8), 2),
        OpCode::new(0x53, "BIT 2,E", (8, 8), 2),
        OpCode::new(0x54, "BIT 2,H", (8, 8), 2),
        OpCode::new(0x55, "BIT 2,L", (8, 8), 2),
        OpCode::new(0x56, "BIT 2,(HL)", (12, 12), 2),
        OpCode::new(0x57, "BIT 2,A", (8, 8), 2),
        OpCode::new(0x58, "BIT 3,B", (8, 8), 2),
        OpCode::new(0x59, "BIT 3,C", (8, 8), 2),
        OpCode::new(0x5A, "BIT 3,D", (8, 8), 2),
        OpCode::new(0x5B, "BIT 3,E", (8, 8), 2),
        OpCode::new(0x5C, "BIT 3,H", (8, 8), 2),
        OpCode::new(0x5D, "BIT 3,L", (8, 8), 2),
        OpCode::new(0x5E, "BIT 3,(HL)", (12, 12), 2),
        OpCode::new(0x5F, "BIT 3,A", (8, 8), 2),
        OpCode::new(0x60, "BIT 4,B", (8, 8), 2),
        OpCode::new(0x61, "BIT 4,C", (8, 8), 2),
        OpCode::new(0x62, "BIT 4,D", (8, 8), 2),
        OpCode::new(0x63, "BIT 4,E", (8, 8), 2),
        OpCode::new(0x64, "BIT 4,H", (8, 8), 2),
        OpCode::new(0x65, "BIT 4,L", (8, 8), 2),
        OpCode::new(0x66, "BIT 4,(HL)", (12, 12), 2),
        OpCode::new(0x67, "BIT 4,A", (8, 8), 2),
        OpCode::new(0x68, "BIT 5,B", (8, 8), 2),
        OpCode::new(0x69, "BIT 5,C", (8, 8), 2),
        OpCode::new(0x6A, "BIT 5,D", (8, 8), 2),
        OpCode::new(0x6B, "BIT 5,E", (8, 8), 2),
        OpCode::new(0x6C, "BIT 5,H", (8, 8), 2),
        OpCode::new(0x6D, "BIT 5,L", (8, 8), 2),
        OpCode::new(0x6E, "BIT 5,(HL)", (12, 12), 2),
        OpCode::new(0x6F, "BIT 5,A", (8, 8), 2),
        OpCode::new(0x70, "BIT 6,B", (8, 8), 2),
        OpCode::new(0x71, "BIT 6,C", (8, 8), 2),
        OpCode::new(0x72, "BIT 6,D", (8, 8), 2),
        OpCode::new(0x73, "BIT 6,E", (8, 8), 2),
        OpCode::new(0x74, "BIT 6,H", (8, 8), 2),
        OpCode::new(0x75, "BIT 6,L", (8, 8), 2),
        OpCode::new(0x76, "BIT 6,(HL)", (12, 12), 2),
        OpCode::new(0x77, "BIT 6,A", (8, 8), 2),
        OpCode::new(0x78, "BIT 7,B", (8, 8), 2),
        OpCode::new(0x79, "BIT 7,C", (8, 8), 2),
        OpCode::new(0x7A, "BIT 7,D", (8, 8), 2),
        OpCode::new(0x7B, "BIT 7,E", (8, 8), 2),
        OpCode::new(0x7C, "BIT 7,H", (8, 8), 2),
        OpCode::new(0x7D, "BIT 7,L", (8, 8), 2),
        OpCode::new(0x7E, "BIT 7,(HL)", (12, 12), 2),
        OpCode::new(0x7F, "BIT 7,A", (8, 8), 2),
        OpCode::new(0x80, "RES 0,B", (8, 8), 2),
        OpCode::new(0x81, "RES 0,C", (8, 8), 2),
        OpCode::new(0x82, "RES 0,D", (8, 8), 2),
        OpCode::new(0x83, "RES 0,E", (8, 8), 2),
        OpCode::new(0x84, "RES 0,H", (8, 8), 2),
        OpCode::new(0x85, "RES 0,L", (8, 8), 2),
        OpCode::new(0x86, "RES 0,(HL)", (16, 16), 2),
        OpCode::new(0x87, "RES 0,A", (8, 8), 2),
        OpCode::new(0x88, "RES 1,B", (8, 8), 2),
        OpCode::new(0x89, "RES 1,C", (8, 8), 2),
        OpCode::new(0x8A, "RES 1,D", (8, 8), 2),
        OpCode::new(0x8B, "RES 1,E", (8, 8), 2),
        OpCode::new(0x8C, "RES 1,H", (8, 8), 2),
        OpCode::new(0x8D, "RES 1,L", (8, 8), 2),
        OpCode::new(0x8E, "RES 1,(HL)", (16, 16), 2),
        OpCode::new(0x8F, "RES 1,A", (8, 8), 2),
        OpCode::new(0x90, "RES 2,B", (8, 8), 2),
        OpCode::new(0x91, "RES 2,C", (8, 8), 2),
        OpCode::new(0x92, "RES 2,D", (8, 8), 2),
        OpCode::new(0x93, "RES 2,E", (8, 8), 2),
        OpCode::new(0x94, "RES 2,H", (8, 8), 2),
        OpCode::new(0x95, "RES 2,L", (8, 8), 2),
        OpCode::new(0x96, "RES 2,(HL)", (16, 16), 2),
        OpCode::new(0x97, "RES 2,A", (8, 8), 2),
        OpCode::new(0x98, "RES 3,B", (8, 8), 2),
        OpCode::new(0x99, "RES 3,C", (8, 8), 2),
        OpCode::new(0x9A, "RES 3,D", (8, 8), 2),
        OpCode::new(0x9B, "RES 3,E", (8, 8), 2),
        OpCode::new(0x9C, "RES 3,H", (8, 8), 2),
        OpCode::new(0x9D, "RES 3,L", (8, 8), 2),
        OpCode::new(0x9E, "RES 3,(HL)", (16, 16), 2),
        OpCode::new(0x9F, "RES 3,A", (8, 8), 2),
        OpCode::new(0xA0, "RES 4,B", (8, 8), 2),
        OpCode::new(0xA1, "RES 4,C", (8, 8), 2),
        OpCode::new(0xA2, "RES 4,D", (8, 8), 2),
        OpCode::new(0xA3, "RES 4,E", (8, 8), 2),
        OpCode::new(0xA4, "RES 4,H", (8, 8), 2),
        OpCode::new(0xA5, "RES 4,L", (8, 8), 2),
        OpCode::new(0xA6, "RES 4,(HL)", (16, 16), 2),
        OpCode::new(0xA7, "RES 4,A", (8, 8), 2),
        OpCode::new(0xA8, "RES 5,B", (8, 8), 2),
        OpCode::new(0xA9, "RES 5,C", (8, 8), 2),
        OpCode::new(0xAA, "RES 5,D", (8, 8), 2),
        OpCode::new(0xAB, "RES 5,E", (8, 8), 2),
        OpCode::new(0xAC, "RES 5,H", (8, 8), 2),
        OpCode::new(0xAD, "RES 5,L", (8, 8), 2),
        OpCode::new(0xAE, "RES 5,(HL)", (16, 16), 2),
        OpCode::new(0xAF, "RES 5,A", (8, 8), 2),
        OpCode::new(0xB0, "RES 6,B", (8, 8), 2),
        OpCode::new(0xB1, "RES 6,C", (8, 8), 2),
        OpCode::new(0xB2, "RES 6,D", (8, 8), 2),
        OpCode::new(0xB3, "RES 6,E", (8, 8), 2),
        OpCode::new(0xB4, "RES 6,H", (8, 8), 2),
        OpCode::new(0xB5, "RES 6,L", (8, 8), 2),
        OpCode::new(0xB6, "RES 6,(HL)", (16, 16), 2),
        OpCode::new(0xB7, "RES 6,A", (8, 8), 2),
        OpCode::new(0xB8, "RES 7,B", (8, 8), 2),
        OpCode::new(0xB9, "RES 7,C", (8, 8), 2),
        OpCode::new(0xBA, "RES 7,D", (8, 8), 2),
        OpCode::new(0xBB, "RES 7,E", (8, 8), 2),
        OpCode::new(0xBC, "RES 7,H", (8, 8), 2),
        OpCode::new(0xBD, "RES 7,L", (8, 8), 2),
        OpCode::new(0xBE, "RES 7,(HL)", (16, 16), 2),
        OpCode::new(0xBF, "RES 7,A", (8, 8), 2),
        OpCode::new(0xC0, "SET 0,B", (8, 8), 2),
        OpCode::new(0xC1, "SET 0,C", (8, 8), 2),
        OpCode::new(0xC2, "SET 0,D", (8, 8), 2),
        OpCode::new(0xC3, "SET 0,E", (8, 8), 2),
        OpCode::new(0xC4, "SET 0,H", (8, 8), 2),
        OpCode::new(0xC5, "SET 0,L", (8, 8), 2),
        OpCode::new(0xC6, "SET 0,(HL)", (16, 16), 2),
        OpCode::new(0xC7, "SET 0,A", (8, 8), 2),
        OpCode::new(0xC8, "SET 1,B", (8, 8), 2),
        OpCode::new(0xC9, "SET 1,C", (8, 8), 2),
        OpCode::new(0xCA, "SET 1,D", (8, 8), 2),
        OpCode::new(0xCB, "SET 1,E", (8, 8), 2),
        OpCode::new(0xCC, "SET 1,H", (8, 8), 2),
        OpCode::new(0xCD, "SET 1,L", (8, 8), 2),
        OpCode::new(0xCE, "SET 1,(HL)", (16, 16), 2),
        OpCode::new(0xCF, "SET 1,A", (8, 8), 2),
        OpCode::new(0xD0, "SET 2,B", (8, 8), 2),
        OpCode::new(0xD1, "SET 2,C", (8, 8), 2),
        OpCode::new(0xD2, "SET 2,D", (8, 8), 2),
        OpCode::new(0xD3, "SET 2,E", (8, 8), 2),
        OpCode::new(0xD4, "SET 2,H", (8, 8), 2),
        OpCode::new(0xD5, "SET 2,L", (8, 8), 2),
        OpCode::new(0xD6, "SET 2,(HL)", (16, 16), 2),
        OpCode::new(0xD7, "SET 2,A", (8, 8), 2),
        OpCode::new(0xD8, "SET 3,B", (8, 8), 2),
        OpCode::new(0xD9, "SET 3,C", (8, 8), 2),
        OpCode::new(0xDA, "SET 3,D", (8, 8), 2),
        OpCode::new(0xDB, "SET 3,E", (8, 8), 2),
        OpCode::new(0xDC, "SET 3,H", (8, 8), 2),
        OpCode::new(0xDD, "SET 3,L", (8, 8), 2),
        OpCode::new(0xDE, "SET 3,(HL)", (16, 16), 2),
        OpCode::new(0xDF, "SET 3,A", (8, 8), 2),
        OpCode::new(0xE0, "SET 4,B", (8, 8), 2),
        OpCode::new(0xE1, "SET 4,C", (8, 8), 2),
        OpCode::new(0xE2, "SET 4,D", (8, 8), 2),
        OpCode::new(0xE3, "SET 4,E", (8, 8), 2),
        OpCode::new(0xE4, "SET 4,H", (8, 8), 2),
        OpCode::new(0xE5, "SET 4,L", (8, 8), 2),
        OpCode::new(0xE6, "SET 4,(HL)", (16, 16), 2),
        OpCode::new(0xE7, "SET 4,A", (8, 8), 2),
        OpCode::new(0xE8, "SET 5,B", (8, 8), 2),
        OpCode::new(0xE9, "SET 5,C", (8, 8), 2),
        OpCode::new(0xEA, "SET 5,D", (8, 8), 2),
        OpCode::new(0xEB, "SET 5,E", (8, 8), 2),
        OpCode::new(0xEC, "SET 5,H", (8, 8), 2),
        OpCode::new(0xED, "SET 5,L", (8, 8), 2),
        OpCode::new(0xEE, "SET 5,(HL)", (16, 16), 2),
        OpCode::new(0xEF, "SET 5,A", (8, 8), 2),
        OpCode::new(0xF0, "SET 6,B", (8, 8), 2),
        OpCode::new(0xF1, "SET 6,C", (8, 8), 2),
        OpCode::new(0xF2, "SET 6,D", (8, 8), 2),
        OpCode::new(0xF3, "SET 6,E", (8, 8), 2),
        OpCode::new(0xF4, "SET 6,H", (8, 8), 2),
        OpCode::new(0xF5, "SET 6,L", (8, 8), 2),
        OpCode::new(0xF6, "SET 6,(HL)", (16, 16), 2),
        OpCode::new(0xF7, "SET 6,A", (8, 8), 2),
        OpCode::new(0xF8, "SET 7,B", (8, 8), 2),
        OpCode::new(0xF9, "SET 7,C", (8, 8), 2),
        OpCode::new(0xFA, "SET 7,D", (8, 8), 2),
        OpCode::new(0xFB, "SET 7,E", (8, 8), 2),
        OpCode::new(0xFC, "SET 7,H", (8, 8), 2),
        OpCode::new(0xFD, "SET 7,L", (8, 8), 2),
        OpCode::new(0xFE, "SET 7,(HL)", (16, 16), 2),
        OpCode::new(0xFF, "SET 7,A", (8, 8), 2),
    ];
    pub static ref CB_PREFIXED_OPCODES_MAP: HashMap<u8, &'static OpCode> = {
        let mut map = HashMap::new();
        for opcode in &*CB_PREFIXED_OPCODES {
            map.insert(opcode.value, opcode);
        }
        map
    };
}
